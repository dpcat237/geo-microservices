// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geolocation/geolocation.proto

/*
Package geolocation is a generated protocol buffer package.

It is generated from these files:
	geolocation/geolocation.proto

It has these top-level messages:
	Country
	Location
	GetLocationByIDRequest
	GetLocationByIDResponse
*/
package geolocation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Country struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Iso  string `protobuf:"bytes,2,opt,name=iso" json:"iso,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *Country) Reset()                    { *m = Country{} }
func (m *Country) String() string            { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()               {}
func (*Country) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Country) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Country) GetIso() string {
	if m != nil {
		return m.Iso
	}
	return ""
}

func (m *Country) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Location struct {
	Id        uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	IpAddress string   `protobuf:"bytes,2,opt,name=ipAddress" json:"ipAddress,omitempty"`
	Latitude  float64  `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64  `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	Country   *Country `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	City      string   `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Location) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

type GetLocationByIDRequest struct {
	IpAddress string `protobuf:"bytes,1,opt,name=ipAddress" json:"ipAddress,omitempty"`
}

func (m *GetLocationByIDRequest) Reset()                    { *m = GetLocationByIDRequest{} }
func (m *GetLocationByIDRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationByIDRequest) ProtoMessage()               {}
func (*GetLocationByIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetLocationByIDRequest) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type GetLocationByIDResponse struct {
	Location *Location `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Code     uint32    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message  string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetLocationByIDResponse) Reset()                    { *m = GetLocationByIDResponse{} }
func (m *GetLocationByIDResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLocationByIDResponse) ProtoMessage()               {}
func (*GetLocationByIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetLocationByIDResponse) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *GetLocationByIDResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetLocationByIDResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Country)(nil), "geolocation.Country")
	proto.RegisterType((*Location)(nil), "geolocation.Location")
	proto.RegisterType((*GetLocationByIDRequest)(nil), "geolocation.GetLocationByIDRequest")
	proto.RegisterType((*GetLocationByIDResponse)(nil), "geolocation.GetLocationByIDResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LocationController service

type LocationControllerClient interface {
	GetLocationByID(ctx context.Context, in *GetLocationByIDRequest, opts ...grpc.CallOption) (*GetLocationByIDResponse, error)
}

type locationControllerClient struct {
	cc *grpc.ClientConn
}

func NewLocationControllerClient(cc *grpc.ClientConn) LocationControllerClient {
	return &locationControllerClient{cc}
}

func (c *locationControllerClient) GetLocationByID(ctx context.Context, in *GetLocationByIDRequest, opts ...grpc.CallOption) (*GetLocationByIDResponse, error) {
	out := new(GetLocationByIDResponse)
	err := grpc.Invoke(ctx, "/geolocation.LocationController/GetLocationByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LocationController service

type LocationControllerServer interface {
	GetLocationByID(context.Context, *GetLocationByIDRequest) (*GetLocationByIDResponse, error)
}

func RegisterLocationControllerServer(s *grpc.Server, srv LocationControllerServer) {
	s.RegisterService(&_LocationController_serviceDesc, srv)
}

func _LocationController_GetLocationByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationControllerServer).GetLocationByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geolocation.LocationController/GetLocationByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationControllerServer).GetLocationByID(ctx, req.(*GetLocationByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "geolocation.LocationController",
	HandlerType: (*LocationControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLocationByID",
			Handler:    _LocationController_GetLocationByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "geolocation/geolocation.proto",
}

func init() { proto.RegisterFile("geolocation/geolocation.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xcd, 0x36, 0xf7, 0xe7, 0x8e, 0xa9, 0x5c, 0xfc, 0x13, 0x86, 0xc2, 0xa8, 0x3e, 0xec,
	0x69, 0xe2, 0x04, 0x5f, 0x45, 0x27, 0x88, 0xe0, 0x53, 0x3e, 0x80, 0x50, 0x97, 0x30, 0x02, 0x5d,
	0xee, 0x6c, 0xb2, 0x87, 0xfa, 0xc1, 0xfc, 0x7c, 0xd2, 0xb4, 0xd9, 0xda, 0x4d, 0x7c, 0x3b, 0xb9,
	0xb9, 0xe7, 0xf4, 0x77, 0x42, 0xe1, 0x6a, 0xa1, 0x28, 0xa1, 0x79, 0xec, 0x34, 0x99, 0xdb, 0x8a,
	0x9e, 0xac, 0x52, 0x72, 0x84, 0xfd, 0xca, 0x28, 0x7a, 0x84, 0xce, 0x8c, 0xd6, 0xc6, 0xa5, 0x19,
	0x1e, 0x41, 0x43, 0x4b, 0xce, 0x46, 0x6c, 0x3c, 0x10, 0x0d, 0x2d, 0xf1, 0x04, 0x9a, 0xda, 0x12,
	0x6f, 0x8c, 0xd8, 0xb8, 0x27, 0x72, 0x89, 0x08, 0x2d, 0x13, 0x2f, 0x15, 0x6f, 0xfa, 0x91, 0xd7,
	0xd1, 0x0f, 0x83, 0xee, 0x7b, 0x99, 0xb6, 0x17, 0x71, 0x09, 0x3d, 0xbd, 0x7a, 0x92, 0x32, 0x55,
	0xd6, 0x96, 0x41, 0xdb, 0x01, 0x0e, 0xa1, 0x9b, 0xc4, 0x4e, 0xbb, 0xb5, 0x2c, 0x22, 0x99, 0xd8,
	0x9c, 0x73, 0x67, 0x42, 0x66, 0x51, 0x5c, 0xb6, 0xfc, 0xe5, 0x76, 0x80, 0x13, 0xe8, 0xcc, 0x0b,
	0x6a, 0x7e, 0x38, 0x62, 0xe3, 0xfe, 0xf4, 0x74, 0x52, 0xed, 0x59, 0x36, 0x12, 0x61, 0x29, 0x07,
	0x9f, 0x6b, 0x97, 0xf1, 0x76, 0x01, 0x9e, 0xeb, 0xe8, 0x01, 0xce, 0x5f, 0x95, 0x0b, 0xe8, 0xcf,
	0xd9, 0xdb, 0x8b, 0x50, 0x5f, 0x6b, 0x65, 0x5d, 0x9d, 0x9a, 0xed, 0x50, 0x47, 0xdf, 0x70, 0xb1,
	0xe7, 0xb3, 0x2b, 0x32, 0x56, 0xe1, 0x1d, 0x74, 0x03, 0x83, 0xf7, 0xf5, 0xa7, 0x67, 0x35, 0xae,
	0x60, 0x12, 0x9b, 0x35, 0x4f, 0x46, 0x52, 0xf9, 0xc7, 0x19, 0x08, 0xaf, 0x91, 0x43, 0x67, 0xa9,
	0xac, 0x8d, 0x17, 0xe1, 0xa5, 0xc3, 0x71, 0xea, 0x00, 0x43, 0xc6, 0x8c, 0x8c, 0x4b, 0x29, 0x49,
	0x54, 0x8a, 0x1f, 0x70, 0xbc, 0x43, 0x84, 0xd7, 0xb5, 0xef, 0xfe, 0xdd, 0x73, 0x78, 0xf3, 0xff,
	0x52, 0x51, 0x2a, 0x3a, 0xf8, 0x6c, 0xfb, 0xff, 0xe6, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf6,
	0x0f, 0x20, 0xe6, 0x58, 0x02, 0x00, 0x00,
}
